/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef APPACTIVITYSCREENVIEWBASE_HPP
#define APPACTIVITYSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/appactivityscreen_screen/AppActivityScreenPresenter.hpp>
#include <gui/containers/ScreenBackgroundContainer.hpp>
#include <gui/containers/ActivityDataContainter_Map.hpp>
#include <gui/containers/ActivityDataContainter_Alti.hpp>
#include <gui/containers/ActivityDataContainter_Main.hpp>
#include <gui/containers/ActivityDataContainter_MapSelector.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>

class AppActivityScreenViewBase : public touchgfx::View<AppActivityScreenPresenter>
{
public:
    AppActivityScreenViewBase();
    virtual ~AppActivityScreenViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void StartStopActivity()
    {
        // Override and implement this function in AppActivityScreen
    }

    virtual void FinishActivity()
    {
        // Override and implement this function in AppActivityScreen
    }

    virtual void ChangeActivityDataCC()
    {
        // Override and implement this function in AppActivityScreen
    }

    virtual void ZoomIn()
    {
        // Override and implement this function in AppActivityScreen
    }

    virtual void ZoomOut()
    {
        // Override and implement this function in AppActivityScreen
    }

    virtual void DisplayNextMap()
    {
        // Override and implement this function in AppActivityScreen
    }

    virtual void DisplayPreviousMap()
    {
        // Override and implement this function in AppActivityScreen
    }

    virtual void ConfirmMapSelection()
    {
        // Override and implement this function in AppActivityScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    ScreenBackgroundContainer BackgroundCC;
    ActivityDataContainter_Map ActivityDataCC_Map;
    ActivityDataContainter_Alti ActivityDataCC_Alti;
    ActivityDataContainter_Main ActivityDataCC_Main;
    ActivityDataContainter_MapSelector ActivityDataCC_MapSelector;
    touchgfx::TextAreaWithOneWildcard NameTextBox;
    touchgfx::ButtonWithIcon ButtonForLabel;
    touchgfx::ButtonWithIcon NextButton;
    touchgfx::ButtonWithIcon ZoomOutButton;
    touchgfx::ButtonWithIcon StartStopButton;
    touchgfx::ButtonWithIcon ZoomInButton;
    touchgfx::ButtonWithIcon FinishButton;
    touchgfx::ButtonWithIcon PrevMapButton;
    touchgfx::ButtonWithIcon ConfirmMapButton;
    touchgfx::ButtonWithIcon NextMapButton;
    touchgfx::ScalableImage FixImage;
    touchgfx::ScalableImage SdCardImage;

    /*
     * Wildcard Buffers
     */
    static const uint16_t NAMETEXTBOX_SIZE = 16;
    touchgfx::Unicode::UnicodeChar NameTextBoxBuffer[NAMETEXTBOX_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<AppActivityScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 3600;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // APPACTIVITYSCREENVIEWBASE_HPP
