/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/appsettingsscreen_screen/AppSettingsScreenViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

AppSettingsScreenViewBase::AppSettingsScreenViewBase() :
    buttonCallback(this, &AppSettingsScreenViewBase::buttonCallbackHandler)
{

    BackgroundCC.setXY(0, 0);

    SettingsCC.setXY(0, 90);

    ExitButton.setXY(0, 260);
    ExitButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_HOME_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_HOME_32_ID));
    ExitButton.setIconXY(15, 16);
    ExitButton.setAction(buttonCallback);

    NextButton.setXY(180, 260);
    NextButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_NEXT_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_NEXT_ARROW_32_ID));
    NextButton.setIconXY(22, 15);
    NextButton.setAction(buttonCallback);

    BackButton.setXY(90, 260);
    BackButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID));
    BackButton.setIconXY(22, 15);
    BackButton.setAction(buttonCallback);

    DownButton.setXY(35, 200);
    DownButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_32_ID));
    DownButton.setIconXY(70, 22);
    DownButton.setAction(buttonCallback);

    UpButton.setXY(35, 30);
    UpButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_32_ID));
    UpButton.setIconXY(70, 22);
    UpButton.setAction(buttonCallback);

    NameLabel.setXY(79, 5);
    NameLabel.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    NameLabel.setLinespacing(0);
    NameLabel.setTypedText(touchgfx::TypedText(T_SINGLEUSEID225));

    add(BackgroundCC);
    add(SettingsCC);
    add(ExitButton);
    add(NextButton);
    add(BackButton);
    add(DownButton);
    add(UpButton);
    add(NameLabel);
}

void AppSettingsScreenViewBase::setupScreen()
{
    BackgroundCC.initialize();
    SettingsCC.initialize();
}

void AppSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &ExitButton)
    {
        //GoToAppMenuScreen
        //When ExitButton clicked change screen to AppMenuScreen
        //Go to AppMenuScreen with no screen transition
        application().gotoAppMenuScreenScreenNoTransition();
    }
    else if (&src == &NextButton)
    {
        //DisplayNextSetting
        //When NextButton clicked call virtual function
        //Call DisplayNextSetting
        DisplayNextSetting();
    }
    else if (&src == &BackButton)
    {
        //DisplayPreviousSetting
        //When BackButton clicked call virtual function
        //Call DisplayPreviousSetting
        DisplayPreviousSetting();
    }
    else if (&src == &DownButton)
    {
        //DecrementValue
        //When DownButton clicked call virtual function
        //Call DecrementValue
        DecrementValue();
    }
    else if (&src == &UpButton)
    {
        //IncrementValue
        //When UpButton clicked call virtual function
        //Call IncrementValue
        IncrementValue();
    }
}
